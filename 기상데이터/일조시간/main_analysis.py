import pandas as pd
import numpy as np
import time
import kma_api

import pandas as pd
import numpy as np
import time
import kma_api

# --------------------------------------------------
# 1. 전국 지점 코드 (예시: 일부만)
# --------------------------------------------------
station_ids = [
    '105','100','106','104','93','214','90','121','114','211','217','95','101','216','212',
    '98','119','202','203','99',
    '294','284','253','295','288','255','289','257','263','192','155','162','264','285',
    '283','279','273','271','137','136','277','272','281','115','130','278','276','138',
    '156','143','176','133','159','296','116','108','239','152','201','102','112',
    '259','262','266','165','164','258','174','168','252','170','260','256','175','268','261','169',
    '172','251','140','247','243','254','244','248','146','245',
    '185','189','187','188','265','184',
    '238','235','236','129','232','177',
    '226','181','221','131','135','127'
]

# --------------------------------------------------
# 2. 지점-시도 매핑 딕셔너리
# --------------------------------------------------
station_to_region = {
    # 강원특별자치도
    '105':'강원특별자치도','100':'강원특별자치도','106':'강원특별자치도','104':'강원특별자치도','93':'강원특별자치도',
    '214':'강원특별자치도','90':'강원특별자치도','121':'강원특별자치도','114':'강원특별자치도','211':'강원특별자치도',
    '217':'강원특별자치도','95':'강원특별자치도','101':'강원특별자치도','216':'강원특별자치도','212':'강원특별자치도',

    # 경기도
    '98':'경기도','119':'경기도','202':'경기도','203':'경기도','99':'경기도',

    # 경상남도
    '294':'경상남도','284':'경상남도','253':'경상남도','295':'경상남도','288':'경상남도','255':'경상남도','289':'경상남도',
    '257':'경상남도','263':'경상남도','192':'경상남도','155':'경상남도','162':'경상남도','264':'경상남도','285':'경상남도',

    # 경상북도
    '283':'경상북도','279':'경상북도','273':'경상북도','271':'경상북도','137':'경상북도','136':'경상북도','277':'경상북도',
    '272':'경상북도','281':'경상북도','115':'경상북도','130':'경상북도','278':'경상북도','276':'경상북도','138':'경상북도',

    # 광주광역시
    '156':'광주광역시',

    # 대구광역시
    '143':'대구광역시','176':'대구광역시',

    # 대전광역시
    '133':'대전광역시',

    # 부산광역시
    '159':'부산광역시','296':'부산광역시',

    # 서울특별시
    '116':'서울특별시','108':'서울특별시',

    # 세종특별자치시
    '239':'세종특별자치시',

    # 울산광역시
    '152':'울산광역시',

    # 인천광역시
    '201':'인천광역시','102':'인천광역시','112':'인천광역시',

    # 전라남도
    '259':'전라남도','262':'전라남도','266':'전라남도','165':'전라남도','164':'전라남도','258':'전라남도','174':'전라남도',
    '168':'전라남도','252':'전라남도','170':'전라남도','260':'전라남도','256':'전라남도','175':'전라남도','268':'전라남도',
    '261':'전라남도','169':'전라남도',

    # 전북특별자치도
    '172':'전북특별자치도','251':'전북특별자치도','140':'전북특별자치도','247':'전북특별자치도','243':'전북특별자치도',
    '254':'전북특별자치도','244':'전북특별자치도','248':'전북특별자치도','146':'전북특별자치도','245':'전북특별자치도',

    # 제주특별자치도
    '185':'제주특별자치도','189':'제주특별자치도','187':'제주특별자치도','188':'제주특별자치도','265':'제주특별자치도','184':'제주특별자치도',

    # 충청남도
    '238':'충청남도','235':'충청남도','236':'충청남도','129':'충청남도','232':'충청남도','177':'충청남도',

    # 충청북도
    '226':'충청북도','181':'충청북도','221':'충청북도','131':'충청북도','135':'충청북도','127':'충청북도'
}

# --------------------------------------------------
# 3. 지점별 데이터 로딩
# --------------------------------------------------
all_weather_dfs = []
failed_stations = []

for stn_id in station_ids:
    print(f"지점 {stn_id} 데이터 로딩 중...")

    try:
        df = kma_api.get_kma_data(stn_id)

        if df is not None and not df.empty:
            if '날짜' not in df.columns:
                if '일시' in df.columns:
                    df = df.rename(columns={'일시': '날짜'})
            df['지점'] = stn_id
            all_weather_dfs.append(df)
        else:
            print(f"⚠️ 지점 {stn_id}: 빈 데이터 또는 None 반환됨.")
            failed_stations.append(stn_id)

    except Exception as e:
        print(f"❌ 지점 {stn_id} 오류 발생: {e}")
        failed_stations.append(stn_id)

    time.sleep(0.5)

if not all_weather_dfs:
    raise ValueError("❌ 오류: 로드된 데이터가 없습니다. (모든 요청 실패)")

weather_df = pd.concat(all_weather_dfs, ignore_index=True)

# --------------------------------------------------
# 4. 데이터 정제
# --------------------------------------------------
weather_df['날짜'] = pd.to_datetime(weather_df['날짜'], format='%Y%m%d', errors='coerce')
weather_df = weather_df.replace([-9.0, -99.0, -99.9], np.nan)
weather_df = weather_df.sort_values(by=['지점', '날짜'])
weather_df = weather_df.set_index('날짜')

# --------------------------------------------------
# 5. 월별 합계 계산
# --------------------------------------------------
agg_rules = {'일조시간': 'sum'}

monthly_df = (
    weather_df
    .groupby('지점')
    .resample('M')
    .agg(agg_rules)
    .reset_index()
)

monthly_df['날짜'] = monthly_df['날짜'].dt.to_period('M')
monthly_df['시도'] = monthly_df['지점'].map(station_to_region)

# --------------------------------------------------
# 6. 시도별 평균 계산
# --------------------------------------------------
region_monthly_df = (
    monthly_df
    .groupby(['시도', '날짜'])
    .agg({'일조시간': 'mean'})
    .reset_index()
    .set_index(['시도', '날짜'])
)

# --------------------------------------------------
# 7. 결과 출력
# --------------------------------------------------
print("\n✅ 시도별 월평균 일조시간 집계 완료")
print(region_monthly_df.head(15))
print("====================================")
print(region_monthly_df.tail(15))
